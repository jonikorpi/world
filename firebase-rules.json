{"rules": {

  "locations": {
    ".write": "auth.worldmaster === true",
    ".indexOn": "unit/playerID",
    "$locationID": {
      /* TODO generate complicated neighbour rules based on adj. locations */
      /* (pos(playerid).bx + "" == $binx &&  pos(playerid).by + "" == $biny) || //and the other 5 adjacent bin coords */
      ".read": "auth != null",
      "tile": { ".validate": "newData.isString()" },
      "unit": {
        "ownerID": { ".validate": "newData.isString()" },
        "locked": { ".validate": "newData.isBoolean()" },
        "immuneUntil": { ".validate": "newData.isNumber()" },
        "type": { ".validate": "newData.isString()" },
        "turn": { ".validate": "newData.isNumber()" },
        "emote": {
          "type": { ".validate": "newData.isString()" },
          "turn": { ".validate": "newData.isNumber()" } /* Use with `turnMounted` */
        },
        "action": {
          "type": { ".validate": "newData.isString()" },
          "turn": { ".validate": "newData.isNumber()" } /* Use with `turnMounted` */
        },
        "health": {
          "originalMax": { ".validate": "newData.isNumber()" },
          "max":         { ".validate": "newData.isNumber()" },
          "current":     { ".validate": "newData.isNumber()" }
        },
        "attack": {
          "original": { ".validate": "newData.isNumber()" },
          "current":  { ".validate": "newData.isNumber()" }
        }
      }
    }
  },

  "playerSecrets": {
    ".write": "auth.worldmaster === true",
    "$playerID": {
      ".read": "(auth != null && auth.uid === $playerID) || auth.worldmaster === true",
      "mana": { ".validate": "newData.isNumber()" },
      "turns": { ".validate": "newData.isNumber()" },
      "locations": {
        "$locationID": { ".validate": "newData.isBoolean()" }
      }
    }
  },

  "players": {
    "$playerID": {
      ".read": "auth != null",
      ".write": "(auth != null && auth.uid === $playerID) || auth.worldmaster === true",
      /* TODO flag */
      "$other": { ".validate": "false" }
    }
  }

}}

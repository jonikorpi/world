{"rules": {

  "locations": {
    ".write": "auth.worldmaster === true",
    ".indexOn": "playerID",
    "$locationID": {
      /* TODO generate complicated neighbour rules based on adj. locations */
      /* Maybe check against player indexes instead of this node */
      /* (pos(playerid).bx + "" == $binx &&  pos(playerid).by + "" == $biny) || //and the other 5 adjacent bin coords */
      ".read": "auth != null",

      "x": { ".validate": "newData.isNumber()" },
      "y": { ".validate": "newData.isNumber()" },

      "rock":  { ".validate": "newData.isNumber()" },
      "flora": { ".validate": "newData.isNumber()" },
      "water": { ".validate": "newData.isNumber()" },
      "heat":  { ".validate": "newData.isNumber()" },

      "playerID": { ".validate": "newData.isString()" },

      "$other": { ".validate": "false" }
    }
  },

  "players": {
    ".write": "auth.worldmaster === true",
    "$playerID": {
      /* TODO generate complicated neighbour rules based on adj. locations */
      /* Maybe check against location indexes instead of this node */
      /* (pos(playerid).bx + "" == $binx &&  pos(playerid).by + "" == $biny) || //and the other 5 adjacent bin coords */
      ".read": "(auth != null && auth.uid === $playerID) || auth.worldmaster === true",

      "x": { ".validate": "newData.isNumber()" },
      "y": { ".validate": "newData.isNumber()" },

      "locked":      { ".validate": "newData.isBoolean()" },
      "immuneUntil": { ".validate": "newData.isNumber()" },
      "turn":        { ".validate": "newData.isNumber()" },

      "emoteType": { ".validate": "newData.isString()" },
      "emoteTurn": { ".validate": "newData.isNumber()" }, /* Use with `turnMounted` */

      "actionType": { ".validate": "newData.isString()" },
      "actionTurn": { ".validate": "newData.isNumber()" }, /* Use with `turnMounted` */

      "equipment": {
        "$itemID": { ".validate": "newData.isNumber()" } /* Durability */
      },

      "$other": { ".validate": "false" }
    }
  },

  "playerSecrets": {
    ".write": "auth.worldmaster === true",
    "$playerID": {
      ".read":  "(auth != null && auth.uid === $playerID) || auth.worldmaster === true",

      "inventory": {
        "$itemID": { ".validate": "newData.isBoolean()" }
      }
    }
  },

  "playerSettings": {
    "$playerID": {
      ".read":  "(auth != null && auth.uid === $playerID) || auth.worldmaster === true",
      ".write": "(auth != null && auth.uid === $playerID) || auth.worldmaster === true"
      /* TODO flag/mask/icon/logo + copy to players on spawn */
    }
  }

}}
